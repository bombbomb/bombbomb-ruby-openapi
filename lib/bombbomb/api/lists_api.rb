=begin
#BombBomb

#We make it easy to build relationships using simple videos.

OpenAPI spec version: 2.0.24005

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require "uri"

module BombBomb
  class ListsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Clear Contacts from List
    # Clears all contacts from a list.
    # @param list_id The list to be cleared.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def clear_list(list_id, opts = {})
      clear_list_with_http_info(list_id, opts)
      return nil
    end

    # Clear Contacts from List
    # Clears all contacts from a list.
    # @param list_id The list to be cleared.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def clear_list_with_http_info(list_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ListsApi.clear_list ..."
      end
      # verify the required parameter 'list_id' is set
      fail ArgumentError, "Missing the required parameter 'list_id' when calling ListsApi.clear_list" if list_id.nil?
      # resource path
      local_var_path = "/lists/{listId}/clear".sub('{format}','json').sub('{' + 'listId' + '}', list_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/x-www-form-urlencoded']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BBOAuth2']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ListsApi#clear_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Copy All Contacts from a List
    # Copy all contacts from a list.
    # @param from_list_id The list to be cleared.
    # @param list_id The list to be cleared.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def copy_list_contacts(from_list_id, list_id, opts = {})
      copy_list_contacts_with_http_info(from_list_id, list_id, opts)
      return nil
    end

    # Copy All Contacts from a List
    # Copy all contacts from a list.
    # @param from_list_id The list to be cleared.
    # @param list_id The list to be cleared.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def copy_list_contacts_with_http_info(from_list_id, list_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ListsApi.copy_list_contacts ..."
      end
      # verify the required parameter 'from_list_id' is set
      fail ArgumentError, "Missing the required parameter 'from_list_id' when calling ListsApi.copy_list_contacts" if from_list_id.nil?
      # verify the required parameter 'list_id' is set
      fail ArgumentError, "Missing the required parameter 'list_id' when calling ListsApi.copy_list_contacts" if list_id.nil?
      # resource path
      local_var_path = "/lists/{listId}/copy".sub('{format}','json').sub('{' + 'listId' + '}', list_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/x-www-form-urlencoded']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}
      form_params["fromListId"] = from_list_id

      # http body (model)
      post_body = nil
      auth_names = ['BBOAuth2']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ListsApi#copy_list_contacts\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Suppress All Contacts from List
    # Suppresses all contacts in a list.
    # @param list_id The list to be cleared.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def suppress_all_in_list(list_id, opts = {})
      suppress_all_in_list_with_http_info(list_id, opts)
      return nil
    end

    # Suppress All Contacts from List
    # Suppresses all contacts in a list.
    # @param list_id The list to be cleared.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def suppress_all_in_list_with_http_info(list_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ListsApi.suppress_all_in_list ..."
      end
      # verify the required parameter 'list_id' is set
      fail ArgumentError, "Missing the required parameter 'list_id' when calling ListsApi.suppress_all_in_list" if list_id.nil?
      # resource path
      local_var_path = "/lists/{listId}/suppress".sub('{format}','json').sub('{' + 'listId' + '}', list_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/x-www-form-urlencoded']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BBOAuth2']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ListsApi#suppress_all_in_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
