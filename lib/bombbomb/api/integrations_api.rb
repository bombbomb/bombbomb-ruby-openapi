=begin
#BombBomb

#We make it easy to build relationships using simple videos.

OpenAPI spec version: 2.0.25797

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require "uri"

module BombBomb
  class IntegrationsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Synchronize your integration list or lists.
    # Synchronize your integration contact list with the service you are integrated with. If no integration code is provided, all integrations will be synchronized.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :integration_id The integration to sync lists for. All integrations will sync if nothing is provided.
    # @return [String]
    def sync_users_integrated_lists(opts = {})
      data, _status_code, _headers = sync_users_integrated_lists_with_http_info(opts)
      return data
    end

    # Synchronize your integration list or lists.
    # Synchronize your integration contact list with the service you are integrated with. If no integration code is provided, all integrations will be synchronized.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :integration_id The integration to sync lists for. All integrations will sync if nothing is provided.
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def sync_users_integrated_lists_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: IntegrationsApi.sync_users_integrated_lists ..."
      end
      # resource path
      local_var_path = "/integrations/sync".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'integration_id'] = opts[:'integration_id'] if !opts[:'integration_id'].nil?

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/x-www-form-urlencoded']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['BBOAuth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'String')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: IntegrationsApi#sync_users_integrated_lists\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
